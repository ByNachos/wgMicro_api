// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/configs": {
            "get": {
                "description": "Возвращает список всех peer-конфигураций",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "List all peer configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Config"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Config": {
            "type": "object",
            "properties": {
                "allowedIps": {
                    "description": "AllowedIps – список разрешённых IP/Netmask для этого peer’а",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endpoint": {
                    "description": "Endpoint – адрес (IP:port) к которому peer коннектится",
                    "type": "string"
                },
                "latestHandshake": {
                    "description": "LatestHandshake – время последнего рукопожатия в UNIX-секундах",
                    "type": "integer"
                },
                "persistentKeepalive": {
                    "description": "PersistentKeepalive – интервал keepalive в секундах (0 или off)",
                    "type": "integer"
                },
                "preSharedKey": {
                    "description": "PreSharedKey – опциональный pre-shared ключ",
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "description": "PublicKey – публичный ключ peer’а",
                    "type": "string"
                },
                "receiveBytes": {
                    "description": "ReceiveBytes – сколько байт получено",
                    "type": "integer"
                },
                "transmitBytes": {
                    "description": "TransmitBytes – сколько байт передано",
                    "type": "integer"
                }
            }
        },
        "domain.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "WireGuard API Service",
	Description:      "Управление настройками WireGuard через HTTP",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
