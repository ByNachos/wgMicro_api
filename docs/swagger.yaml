basePath: /
definitions:
  wgMicro_api_internal_domain.ClientFileRequest:
    properties:
      client_private_key:
        description: Client's private key, base64 encoded
        type: string
      client_public_key:
        description: Client's public key, base64 encoded
        type: string
    required:
    - client_private_key
    - client_public_key
    type: object
  wgMicro_api_internal_domain.Config:
    properties:
      allowedIps:
        description: |-
          AllowedIps is a list of IP networks (CIDR notation) from which this peer is allowed to send traffic
          and to which traffic will be routed through this peer.
          Example: ["10.0.0.2/32", "192.168.2.0/24"]
        items:
          type: string
        type: array
      endpoint:
        description: |-
          Endpoint is the remote IP address and port to which this peer connects (if this config represents a client)
          or the public IP and port of this peer (if this config represents a remote peer from server's perspective).
          If "(none)" is shown by 'wg show dump', this will be an empty string.
          omitempty is used as it might not always be set or known.
          Example: "192.0.2.1:51820"
        type: string
      latestHandshake:
        description: |-
          LatestHandshake is the timestamp (UNIX seconds) of the most recent handshake with this peer.
          A value of 0 indicates no handshake has occurred.
          omitempty is used as it's state information.
        type: integer
      persistentKeepalive:
        description: |-
          PersistentKeepalive is the interval in seconds for sending keepalive packets to the peer.
          "off" from 'wg show dump' is represented as 0.
          omitempty is used as it might not be set.
          Example: 25
        type: integer
      preSharedKey:
        description: |-
          PreSharedKey is an optional pre-shared key for an extra layer of security.
          If "(none)" is shown by 'wg show dump', this will be an empty string.
          omitempty is used as it's optional.
          Example: "s1t2u3v4...+Y9="
        type: string
      privateKey:
        description: |-
          PrivateKey is the client's private key. This is NOT part of 'wg show dump' output
          but is essential for generating a client .conf file.
          It's populated by the service when new keys are generated (e.g., during Rotate)
          or expected from the user if they manage keys externally and provide it for config generation.
          omitempty is used so it's not shown in API responses unless explicitly set (e.g. on Rotate response).
        type: string
      publicKey:
        description: |-
          PublicKey is the peer's public key. This is a mandatory field for identifying a peer.
          Example: "a1b2c3d4...+Z0="
        type: string
      receiveBytes:
        description: |-
          ReceiveBytes is the total number of bytes received from this peer.
          omitempty is used as it's state information.
        type: integer
      transmitBytes:
        description: |-
          TransmitBytes is the total number of bytes transmitted to this peer.
          omitempty is used as it's state information.
        type: integer
    type: object
  wgMicro_api_internal_domain.CreatePeerRequest:
    properties:
      allowed_ips:
        description: AllowedIps is a list of IP networks (CIDR notation) for the new
          peer. Can be empty.
        items:
          type: string
        type: array
      persistent_keepalive:
        description: PersistentKeepalive is an optional interval in seconds for keepalive
          packets.
        type: integer
      preshared_key:
        description: PreSharedKey is an optional pre-shared key for the new peer.
        type: string
    type: object
  wgMicro_api_internal_domain.DeleteConfigRequest:
    properties:
      public_key:
        description: PublicKey is the peer's public key to delete.
        type: string
    required:
    - public_key
    type: object
  wgMicro_api_internal_domain.ErrorResponse:
    properties:
      error:
        description: |-
          Error contains a human-readable message describing the error.
          This message is intended for the API consumer.
          Example: "Peer not found" or "Invalid input: public key is malformed"
        example: Peer not found
        type: string
    type: object
  wgMicro_api_internal_domain.GetConfigRequest:
    properties:
      public_key:
        description: PublicKey is the peer's public key to retrieve configuration
          for.
        type: string
    required:
    - public_key
    type: object
  wgMicro_api_internal_domain.HealthResponse:
    properties:
      status:
        description: |-
          Status indicates the health of the service.
          Expected value is "ok" for a healthy service.
          Example: "ok"
        example: ok
        type: string
    type: object
  wgMicro_api_internal_domain.ReadinessResponse:
    properties:
      error:
        description: |-
          Error contains a message if the service is not ready, explaining the reason.
          This field is omitted if the status is "ready".
          Example: "wg command failed: wireguard command timed out"
        example: wg command failed
        type: string
      status:
        description: |-
          Status indicates the readiness of the service.
          Expected values: "ready" or "not ready".
          Example: "ready"
        example: ready
        type: string
    type: object
  wgMicro_api_internal_domain.RotatePeerRequest:
    properties:
      public_key:
        description: PublicKey is the peer's current public key to rotate.
        type: string
    required:
    - public_key
    type: object
  wgMicro_api_internal_domain.UpdateAllowedIpsRequest:
    properties:
      allowed_ips:
        description: |-
          AllowedIps is the new list of IP networks (CIDR notation) to set for the peer.
          This will replace the existing list. An empty list might remove all allowed IPs.
        items:
          type: string
        type: array
      public_key:
        description: PublicKey is the peer's public key to update.
        type: string
    required:
    - public_key
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Manages WireGuard peer configurations via an HTTP API.
  termsOfService: http://swagger.io/terms/
  title: WireGuard API Service
  version: "1.0"
paths:
  /configs:
    get:
      description: Retrieves a list of all currently configured WireGuard peers. Private
        keys of peers are not included.
      produces:
      - application/json
      responses:
        "200":
          description: A list of peer configurations.
          schema:
            items:
              $ref: '#/definitions/wgMicro_api_internal_domain.Config'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable (WireGuard timeout).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: List all peer configurations
      tags:
      - configs
    post:
      consumes:
      - application/json
      description: |-
        Adds a new peer. The server generates cryptographic keys for the peer.
        The request body should specify AllowedIPs and optionally PreSharedKey and PersistentKeepalive.
        The response includes the full peer configuration, including the server-generated PrivateKey, which the client must securely store.
      parameters:
      - description: Peer settings for creation (keys will be generated by server).
        in: body
        name: peerRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.CreatePeerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Peer created successfully. The response includes the generated
            private key.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.Config'
        "400":
          description: Invalid input if the request body is malformed or contains
            invalid data.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error if peer creation or key generation fails.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable if a WireGuard command times out.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Create new peer with server-generated keys
      tags:
      - configs
  /configs/client-file:
    post:
      consumes:
      - application/json
      description: |-
        Generates a WireGuard .conf file for a client.
        The request body must contain the client's existing public key (to identify the peer on the server) and the client's corresponding private key.
        The API uses these keys along with server configuration (server public key, endpoint) and the specific peer's details (AllowedIPs, PSK from server, Keepalive) to construct the .conf file.
        The provided client private key is inserted directly into the .conf file. The API does not store this client-provided private key.
      parameters:
      - description: Client's public and private keys needed for .conf generation.
        in: body
        name: clientKeysRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.ClientFileRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: The WireGuard .conf file content as plain text.
          schema:
            type: file
        "400":
          description: Invalid input if the request body is malformed or required
            keys are missing.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "404":
          description: Peer not found if no peer matches the provided client_public_key.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error if .conf file generation fails for other
            reasons.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable if a WireGuard command (e.g., during peer
            data fetch) times out.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Generate client .conf file (client provides keys)
      tags:
      - configs
  /configs/delete:
    post:
      consumes:
      - application/json
      description: Removes a peer from the WireGuard interface using its public key.
      parameters:
      - description: Public key of the peer to delete.
        in: body
        name: deleteRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.DeleteConfigRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Peer deleted successfully (No Content).
          schema:
            type: "null"
        "400":
          description: Invalid input (e.g., empty public key or malformed JSON).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "404":
          description: Peer not found (only if service layer can reliably detect this
            for delete operations).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable (WireGuard timeout).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Delete a peer configuration
      tags:
      - configs
  /configs/get:
    post:
      consumes:
      - application/json
      description: Retrieves detailed configuration for a specific peer identified
        by its public key. The peer's private key is not included.
      parameters:
      - description: Public key to retrieve configuration for.
        in: body
        name: getRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.GetConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Peer's configuration.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.Config'
        "400":
          description: Invalid input (e.g., empty public key or malformed JSON).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "404":
          description: Peer not found.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable (WireGuard timeout).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Get configuration by public key
      tags:
      - configs
  /configs/rotate:
    post:
      consumes:
      - application/json
      description: Rotates peer's keys. Server generates new keys. Old peer removed,
        new one created preserving AllowedIPs & Keepalive. Response includes new PrivateKey
        (client must store it).
      parameters:
      - description: Public key of the peer to rotate.
        in: body
        name: rotateRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.RotatePeerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New peer configuration including new PrivateKey.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.Config'
        "400":
          description: Invalid input (e.g., empty public key or malformed JSON).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "404":
          description: Peer not found.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error (key rotation fails).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable (WireGuard timeout).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Rotate peer key
      tags:
      - configs
  /configs/update-allowed-ips:
    post:
      consumes:
      - application/json
      description: Replaces the list of allowed IP addresses for an existing peer,
        identified by its public key.
      parameters:
      - description: Public key and new list of allowed IPs for the peer.
        in: body
        name: updateRequest
        required: true
        schema:
          $ref: '#/definitions/wgMicro_api_internal_domain.UpdateAllowedIpsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Allowed IPs updated successfully (No body content in response).
        "400":
          description: Invalid input (e.g., missing public key or malformed body).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "404":
          description: Peer not found.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
        "503":
          description: Service unavailable (WireGuard timeout).
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ErrorResponse'
      summary: Update allowed IPs for a peer
      tags:
      - configs
  /healthz:
    get:
      description: |-
        Indicates if the application process is running and responsive.
        A 200 OK response means the service is live.
      produces:
      - application/json
      responses:
        "200":
          description: Service is live.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.HealthResponse'
      summary: Liveness probe for the service
      tags:
      - health
  /readyz:
    get:
      description: |-
        Indicates if the application is ready to accept and process new requests.
        This typically involves checking dependencies like database connections or, in this case, WireGuard utility accessibility.
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready to handle requests.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ReadinessResponse'
        "503":
          description: Service is not ready, e.g., WireGuard is inaccessible or command
            timed out.
          schema:
            $ref: '#/definitions/wgMicro_api_internal_domain.ReadinessResponse'
      summary: Readiness probe for the service
      tags:
      - health
schemes:
- http
- https
swagger: "2.0"
